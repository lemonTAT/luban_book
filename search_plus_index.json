{"./":{"url":"./","title":"Introduction","keywords":"","body":"鲁班应用搭建平台 Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-10-25 09:32:48 "},"introduction/app.html":{"url":"introduction/app.html","title":"应用的构成","keywords":"","body":"应用的构成 从本质上讲，所有Web应用都是一种运行在网页浏览器中的软件，这些软件的图形用户界面（Graphical User Interface，简称GUI）即为前端。 Web应用是一种GUI软件 1、应用由页面构成 整个Web应用由页面组成 2、页面由组件组成 3、一个组件一个目录，资源就近维护 4、组件可组合，组件的JS可依赖其他JS模块，CSS可依赖其他CSS单元 3大框架定义了组件的开发和管理规范，应用往往由多功能、多页面、多状态、多系统构成。逻辑编排，数据拆包解包，最终通过JS(胶水)将这些逻辑，组件粘合在一起形成我们的页面。这带来了一下一些问题： 1、页面的组件无法做到可插拔，只能通过代码修改实现 2、逻辑编排、UI、数据拆解包通过JS粘合在一起，业务的变更和改动必须通过代码修改实现 3、当业务发生变更，我们往往又需要设计代码修改和发布 参考资料 前端工程——基础篇 致我们终将组件化的 Web Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-10-22 11:00:48 "},"introduction/bigrender.html":{"url":"introduction/bigrender.html","title":"BigRender","keywords":"","body":"Bigrender介绍 参考资料 淘宝详情页的 BigRender 优化与存放大块 HTML 内容的最佳方式 Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-10-22 11:02:29 "},"luban/about.html":{"url":"luban/about.html","title":"鲁班","keywords":"","body":"鲁班 鲁班基于多年技术积累沉淀，传承精雕细琢的工匠精神，推出GUI搭建平台（鲁班）。 方案概述 鲁班提供的Web GUI开发的基础套件。主要提供鲁班市场、应用页面、可视化设计器、调用Dubbo和执行Bash的能力，另外还包括相应的一些基础服务。鲁班底层依赖React和Antd、Antd-Mobile，可以运行在主流浏览器。 鲁班方案 Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-10-22 14:32:35 "},"luban/timeline.html":{"url":"luban/timeline.html","title":"鲁班时序图","keywords":"","body":"鲁班时序图 Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-10-25 15:07:54 "},"luban/bigrender.html":{"url":"luban/bigrender.html","title":"鲁班BigRender","keywords":"","body":"Bigrender介绍 React 挂载节点 挂载节点的数据包 BundleJS 18260f50-f496-11e9-9e67-bd27e8391cdd是BundleJS的挂载点，通过React工程开发完成的组件编译成一个JS束，在JS运行的时候动态挂载对应的区块。 ReactDOM.render(, document.getElementById(blockId)); Bigrender区块 Bigrender区块用于存放组件束信息，UI Schema、Data Schema、取数逻辑、页面逻辑编排等信息。 { \"component_id\":44, \"sourceUrl\":\"\", \"blockId\":\"18260f50-f496-11e9-9e67-bd27e8391cdd\", \"schema\":\"{\"formConfig\":[{\"type\":\"Input\",\"formName\":\"eventTypeDisplay\",\"displayName\":\"事件类型:\",\"placeholder\":\"请输入事件类型\",\"initialValue\":\"\",\"style\":{\"width\":\"150px\"}},{\"type\":\"Input\",\"formName\":\"riskManager\",\"displayName\":\"策略经理:\",\"placeholder\":\"请输入策略经理\",\"initialValue\":\"\",\"style\":{\"width\":\"150px\"}}]}\", \"blockData\":\"\", \"eventIds\":[ ], \"create_time\":1568736173000, \"id\":44, \"moduleName\":\"Form\", \"moduleDesc\":\"表单组件\", \"version\":\"1.0.0\", \"npmName\":\"@tongdun/td_form\", \"css\":\"/static/css/form/form.css\", \"js\":\"/static/js/form/form.js\" } Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-10-22 15:09:54 "},"luban/rgl.html":{"url":"luban/rgl.html","title":"鲁班可视化布局","keywords":"","body":"可视设计器介绍 基于react-grid-layout实现可拓展，可调整的layout布局。区块具备UUID唯一编号，UUID全局唯一。 Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-10-22 15:36:25 "},"luban/loader.html":{"url":"luban/loader.html","title":"加载器","keywords":"","body":"Loader LubanLoader.css(url, blockId) url(加载地址): string blockId(区块ID):string 加载CSS束 LubanLoader.loadScript(url, blockId, async, next) 网页性能优化之异步加载js文件 url(加载地址): string blockId(区块ID):string async(JS 延时加载):defer|async next(区块ID):function 加载CSS束 LubanLoader.getCurrentBigRenderData() LubanLoader.getBigRenderData(blockId) blockId(区块ID):string LubanLoader.removeBundle(blockId) blockId(区块ID):string ;(function(root, factory) { if (typeof exports === 'object') { // CommonJS module.exports = exports = factory(); } else if (typeof define === 'function' && define.amd) { // AMD define([], factory); } else { // Global (browser) root.LubanLoader = factory(); } }(this, function() { var LubanLoader = LubanLoader || (function(window, document) { var LubanLoader = {}; LubanLoader.version = '1.0.0'; var head = document.getElementsByTagName('head')[0]; var body = document.getElementsByTagName('body')[0]; // 异步加载JS var loadScript = LubanLoader.loadScript = function(url, blockId, async, next) { var script = document.createElement('script'); script.charset = 'UTF-8'; script.async = async; if (blockId) { script.dataset.jsBlockId = blockId; } script.onerror = function() { next && next(true); }; var loaded = false; script.onload = script.onreadystatechange = function() { if (!loaded && (!script.readyState || 'loaded' === script.readyState || 'complete' === script.readyState)) { loaded = true; setTimeout(function() { next && next(false); }, 0); } }; script.src = url; body.appendChild(script); }; // 异步加载CSS var loadCss = LubanLoader.loadCss = function(url, blockId) { var style = document.createElement('link'); style.href = url; if (blockId) { style.dataset.cssBlockId = blockId; } style.rel = 'stylesheet'; style.type = 'text/css'; head.appendChild(style); }; /** * 获取当前执行JS的blockId */ var getCurrentBlockId = LubanLoader.getCurrentBlockId = function() { /** * 当前正在被执行的脚本 * https://caniuse.com/#search=currentScript */ var currentScript = document.currentScript; return (currentScript && currentScript.dataset.jsBlockId) || 'container'; }; /** * 获取blockId对应BigRenderData * @type {function()} */ var getCurrentBigRenderData = LubanLoader.getCurrentBigRenderData = function() { /** * 当前正在被执行的脚本 * https://caniuse.com/#search=currentScript */ var currentUUID = LubanLoader.getCurrentBlockId(); var bigRenderDataEle = document.querySelectorAll(`[data-block-textarea=\"${currentUUID}\"]`); var bigRenderDataStr = (bigRenderDataEle.length > 0 && bigRenderDataEle[0].innerText) || ''; var bigRenderDataObj = {}; if (bigRenderDataStr) { bigRenderDataObj = JSON.parse(bigRenderDataStr); } return bigRenderDataObj; }; /** * 获取block bigrenderData */ var getBigRenderData = LubanLoader.getBigRenderData = function(blockId) { var bigRenderDataEle = document.querySelectorAll(`[data-block-textarea=\"${blockId}\"]`); var bigRenderDataStr = (bigRenderDataEle.length > 0 && bigRenderDataEle[0].innerText) || ''; var bigRenderDataObj = {}; if (bigRenderDataStr) { bigRenderDataObj = JSON.parse(bigRenderDataStr); } return bigRenderDataObj; }; /** * 移除block bundle 资源 */ var removeBundleEle = LubanLoader.removeBundleEle = function(blockId) { var cssBundleEle = document.querySelectorAll(`[data-css-block-id=\"${blockId}\"]`); var jsBundleEle = document.querySelectorAll(`[data-js-block-id=\"${blockId}\"]`); cssBundleEle && cssBundleEle[0] && cssBundleEle[0].remove(); jsBundleEle && jsBundleEle[0] && jsBundleEle[0].remove(); }; /** * eventId收敛 */ var getLubanEventId = LubanLoader.getLubanEventId = function(moduleName, blockId, eventType) { var eventStr = 'Luban'; if (moduleName) { eventStr = eventStr + `.${moduleName}`; } if (blockId) { eventStr = eventStr + `.${blockId}`; } if (eventType) { eventStr = eventStr + `.${eventType}`; } return eventStr; }; var throwLubanError = LubanLoader.throwLubanError = function(msg) { throw new Error(`${msg}`); }; return LubanLoader; }(window, document)); return LubanLoader; })); Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-10-25 09:44:36 "},"luban/event.html":{"url":"luban/event.html","title":"业务编排","keywords":"","body":"发布订阅模式 pubsub-js API API 功能 subscribe 订阅一个主题，并绑定事件处理函数 subscribeOnce 订阅一个主题，执行一次后，立即注销订阅 publish 异步发布消息 publishSync 同步发布消息 clearSubscriptions 清空特定订阅主题 clearAllSubscriptions 清空所有订阅主题 unsubscribe 注销订阅特定主题 A.B.C.D A位:固定'Luban' B位:功能/模块/组件 C位:UUID D位:事件类型 分层寻址 Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-10-22 16:07:47 "},"thinking/5gaiot.html":{"url":"thinking/5gaiot.html","title":"5G+AI+IoT 超级互联网时代的思考","keywords":"","body":"鲁班应用搭建平台，\"5G+AI+IOT\" 超级互联网时代一站式解决方案 引言：4G改变生活，5G改变社会。随着中国三大国企电信运营商10月31日星期四宣布正式启动5G商用通信服务，标志着中国5G真正进入全民商用时代。5G+AI+IoT组成的超级互联网时代真正成为大众生活的一部分。回顾整个移动通信发展史，2G时代发短信是最时髦的通信方式，3G时代微信兴起，4G时代手机把衣食住行都“管起来”，那么5G将催生哪些“杀手级”应用？将对互联网产业产生哪些深远影响？ 5G是什么？ 5G是指第五代移动通信技术，具有高速率、低时延、高密度等特点，能支持更高效的信息传输、更快速的信号响应以及海量的终端接入。5G还有一个重要目标是通过新技术手段降低数据成本，这有助数据流量消费不断增加。 Mate 30 Pro 5G上市，作为首批用户我第一时间使用SPEEDTEST实测4G，5G，Wifi下各种网络表现。 低延时 5G 在网络延时和抖动上表现接近家庭500M的带宽的环境，我的5G速度不是全速，全速应该还会更快，一次测试耗流量500M。 低延时为各类传感器、机器人、自动驾驶车辆、虚拟现实等智能设备服务的网络。它将重新定义信息技术相关行业，从零售，交通运输、远程医疗、基础设施、工业制造等方面为社会发展和人类生活带来颠覆性变革，它产生的影响将不亚于电力和汽车。 高速率 5G将催生“瘦终端”。5G的超宽带使云端和本地已经没有差异了，许多应用可以放到云端，这将使终端更加简洁，“变瘦”的终端也会更便宜，使消费者节省了成本。 高密度 3G到4G的过渡主要体现在手机上。但对5G来说，手机和平板电脑只是很小一部分应用，更多的是高可靠、低时延、海量物联等场景，比如车联网、物联网、智慧城市、智能制造等，这些应用的普及会加速驱动技术的升级换代。 AI 人工智能（Artificial Intelligence），英文缩写为AI。它是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。 IOT 超级互联网时代，算力芯片和网络通讯技术的升级换代，5G又会给传统的开发带来新的挑战。树莓派（Raspberry Pi）基金会，2019年6月24日正式发布了Raspberry Pi 4 Model B 基于A72架构、4G LDDR4内存、支持千兆网络、双频802.11ac 无线网络、蓝牙5.0千兆网口。因此可以做物联网设备，也能进行一定量的运算，完全已经达到了今天入门级PC的水平。 “物联网”一词最早由 Kevin Ashton 在1999年提出。当时 Kevin 在宝洁公司从事供应链优化工作，他使用了一种新技术 RFID（射频识别），以此建立一个连接物体的无线网络。虽然现代的物联网主要是基于其他技术，Kevin 提出的物联网概念却依然得到广泛地采用，不断深入人心。 物联网将物理世界抽象到数字世界 (基于传感器的感知能力) 通过数据世界我们将重新认识物理世界 (基于新型网络协议的联网能力) 物理世界的数字化将变革人类的生产实践活动 (基于云数据和大计算的综合处理能力) GUI软件 从本质上讲，所有Web应用都是一种运行在网页浏览器中的软件，这些软件的图形用户界面（Graphical User Interface，简称GUI）即为前端。 如此复杂的Web应用，动辄几十上百人共同开发维护，其前端界面通常也颇具规模，工程量不亚于一般的传统GUI软件： 超级互联网时代的开发思考 端渲染回到云端渲染 5G的高速率让服务端渲染(SSR)重新焕发生机，把渲染放到后端，不仅是同构更关注端到端的服务交互，渲染优化等。 低延时、高速率、高密度，前端网络环境变好 1、在3g和4g时代，针对网络层进行优化，我们会将数据尽可能的放在靠近用户一侧。5g这个原则不变，但是我们会加入云端渲染，客户端仅仅是一个轻量级的客户端。设备可能只需要一个显示屏即可。 2、HTTP2的多路复用，Combo合并请求，种子文件将长缓存一次拉取1-2M的资源文件将变成可能。 3、基于Electron前端可以在用户侧驻留一个端，同时这个端里面集成一个Chrome浏览器，这样可以实现混合部署。既可以获取端的能力，又可以实现远程更新 4、云端存储，离线浏览，实时同步。基于IndexDB将远程的数据在联网的时候实时的克隆到本地，优先使用云端数据。 海量设备入网 大量的IOT设备入网，物理世界抽象到数字世界，将带来大量的中台建设需求。传统的Code开发模式将日益无法支撑爆发式的增持需求。 (泛IOT架构) (mqtt_broker) (arduinos) (WeMos D1 mini NodeMCU) (HuaWei 5G CEP PRO) 算法 硬件能力的提升让我们可以在边缘设备上部署小型运算节点，将运算结果实时的回传云端。基于服务端，直接在Node层调用AI模型实现业务应用。 Node将在5G加持下获取更多的能力，基于边缘设备我们可以部署一个小型节点。这个节点上我们可以适时采集用户图像数据，并利用云端的模型适时检测得到结果，结果适时回传云端。 鲁班应用搭建平台 服务端渲染：基于Next.js 数据互联互通：在HTTP通信层面基于http-proxy-middleware的LubanProxy代理实现跨域和Cookie请求携带。Java语言RPC基于Dubbo2.js，其他语言RPC基于Google GPRC 模型能力调用：在AI层面基于opencv4nodejs实现了对模型的直接调用，基于tesseract实现ORC的能力 参考资料 开发板界的「瑞士军刀」—— 树莓派 4 轻体验 前端工程——基础篇 ESP8266 & Public Broker MQTT mosca.io & Node-RED MIDC 2019 小米开发者大会 Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-11-21 12:17:44 "},"demo/methods.html":{"url":"demo/methods.html","title":"API","keywords":"","body":"定义方法 打印 展示 JavaScript 和 Java 如何输出信息 这里演示 JavaScript 如何输出信息到控制台 console.log('Hello World'); 这里演示 Java 如何输出信息到控制台 System.out.println(\"Hello World\"); 这里是 JavaScript 和 Java 共同的信息 定义变量 这里演示 JavaScript 和 Java 如何定义变量 这里演示 JavaScript 如何定义变量： var i = 0; var j = \"a\"; var k = new function() { } 这里演示 Java 如何定义变量 int i = 0; String j = \"a\"; Object o = new Object(); Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-08-08 13:39:10 "},"demo/alert.html":{"url":"demo/alert.html","title":"Alert","keywords":"","body":"Info styling [info] For info Use this for infomation messages. Warning styling [warning] For warning Use this for warning messages. Danger styling [danger] For danger Use this for danger messages. Success styling [success] For info Use this for success messages. Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-08-08 13:39:10 "},"demo/demo.html":{"url":"demo/demo.html","title":"Demo","keywords":"","body":"一级别标题 二级标题 三级标题 区块引用 嵌套引用 /* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress * @license MIT */ ;(function(root, factory) { if (typeof define === 'function' && define.amd) { define(factory); } else if (typeof exports === 'object') { module.exports = factory(); } else { root.NProgress = factory(); } })(this, function() { var NProgress = {}; NProgress.version = '0.2.0'; var Settings = NProgress.settings = { minimum: 0.08, easing: 'ease', positionUsing: '', speed: 200, trickle: true, trickleRate: 0.02, trickleSpeed: 800, showSpinner: true, barSelector: '[role=\"bar\"]', spinnerSelector: '[role=\"spinner\"]', parent: 'body', template: '' }; /** * Updates configuration. * * NProgress.configure({ * minimum: 0.1 * }); */ NProgress.configure = function(options) { var key, value; for (key in options) { value = options[key]; if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value; } return this; }; /** * Last number. */ NProgress.status = null; /** * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`. * * NProgress.set(0.4); * NProgress.set(1.0); */ NProgress.set = function(n) { var started = NProgress.isStarted(); n = clamp(n, Settings.minimum, 1); NProgress.status = (n === 1 ? null : n); var progress = NProgress.render(!started), bar = progress.querySelector(Settings.barSelector), speed = Settings.speed, ease = Settings.easing; progress.offsetWidth; /* Repaint */ queue(function(next) { // Set positionUsing if it hasn't already been set if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS(); // Add transition css(bar, barPositionCSS(n, speed, ease)); if (n === 1) { // Fade out css(progress, { transition: 'none', opacity: 1 }); progress.offsetWidth; /* Repaint */ setTimeout(function() { css(progress, { transition: 'all ' + speed + 'ms linear', opacity: 0 }); setTimeout(function() { NProgress.remove(); next(); }, speed); }, speed); } else { setTimeout(next, speed); } }); return this; }; NProgress.isStarted = function() { return typeof NProgress.status === 'number'; }; /** * Shows the progress bar. * This is the same as setting the status to 0%, except that it doesn't go backwards. * * NProgress.start(); * */ NProgress.start = function() { if (!NProgress.status) NProgress.set(0); var work = function() { setTimeout(function() { if (!NProgress.status) return; NProgress.trickle(); work(); }, Settings.trickleSpeed); }; if (Settings.trickle) work(); return this; }; /** * Hides the progress bar. * This is the *sort of* the same as setting the status to 100%, with the * difference being `done()` makes some placebo effect of some realistic motion. * * NProgress.done(); * * If `true` is passed, it will show the progress bar even if its hidden. * * NProgress.done(true); */ NProgress.done = function(force) { if (!force && !NProgress.status) return this; return NProgress.inc(0.3 + 0.5 * Math.random()).set(1); }; /** * Increments by a random amount. */ NProgress.inc = function(amount) { var n = NProgress.status; if (!n) { return NProgress.start(); } else { if (typeof amount !== 'number') { amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95); } n = clamp(n + amount, 0, 0.994); return NProgress.set(n); } }; NProgress.trickle = function() { return NProgress.inc(Math.random() * Settings.trickleRate); }; /** * Waits for all supplied jQuery promises and * increases the progress as the promises resolve. * * @param $promise jQUery Promise */ (function() { var initial = 0, current = 0; NProgress.promise = function($promise) { if (!$promise || $promise.state() === \"resolved\") { return this; } if (current === 0) { NProgress.start(); } initial++; current++; $promise.always(function() { current--; if (current === 0) { initial = 0; NProgress.done(); } else { NProgress.set((initial - current) / initial); } }); return this; }; })(); /** * (Internal) renders the progress bar markup based on the `template` * setting. */ NProgress.render = function(fromStart) { if (NProgress.isRendered()) return document.getElementById('nprogress'); addClass(document.documentElement, 'nprogress-busy'); var progress = document.createElement('div'); progress.id = 'nprogress'; progress.innerHTML = Settings.template; var bar = progress.querySelector(Settings.barSelector), perc = fromStart ? '-100' : toBarPerc(NProgress.status || 0), parent = document.querySelector(Settings.parent), spinner; css(bar, { transition: 'all 0 linear', transform: 'translate3d(' + perc + '%,0,0)' }); if (!Settings.showSpinner) { spinner = progress.querySelector(Settings.spinnerSelector); spinner && removeElement(spinner); } if (parent != document.body) { addClass(parent, 'nprogress-custom-parent'); } parent.appendChild(progress); return progress; }; /** * Removes the element. Opposite of render(). */ NProgress.remove = function() { removeClass(document.documentElement, 'nprogress-busy'); removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent'); var progress = document.getElementById('nprogress'); progress && removeElement(progress); }; /** * Checks if the progress bar is rendered. */ NProgress.isRendered = function() { return !!document.getElementById('nprogress'); }; /** * Determine which positioning CSS rule to use. */ NProgress.getPositioningCSS = function() { // Sniff on document.body.style var bodyStyle = document.body.style; // Sniff prefixes var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' : ('MozTransform' in bodyStyle) ? 'Moz' : ('msTransform' in bodyStyle) ? 'ms' : ('OTransform' in bodyStyle) ? 'O' : ''; if (vendorPrefix + 'Perspective' in bodyStyle) { // Modern browsers with 3D support, e.g. Webkit, IE10 return 'translate3d'; } else if (vendorPrefix + 'Transform' in bodyStyle) { // Browsers without 3D support, e.g. IE9 return 'translate'; } else { // Browsers without translate() support, e.g. IE7-8 return 'margin'; } }; /** * Helpers */ function clamp(n, min, max) { if (n max) return max; return n; } /** * (Internal) converts a percentage (`0..1`) to a bar translateX * percentage (`-100%..0%`). */ function toBarPerc(n) { return (-1 + n) * 100; } /** * (Internal) returns the correct CSS for changing the bar's * position given an n percentage, and speed and ease from Settings */ function barPositionCSS(n, speed, ease) { var barCSS; if (Settings.positionUsing === 'translate3d') { barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' }; } else if (Settings.positionUsing === 'translate') { barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' }; } else { barCSS = { 'margin-left': toBarPerc(n)+'%' }; } barCSS.transition = 'all '+speed+'ms '+ease; return barCSS; } /** * (Internal) Queues a function to be executed. */ var queue = (function() { var pending = []; function next() { var fn = pending.shift(); if (fn) { fn(next); } } return function(fn) { pending.push(fn); if (pending.length == 1) next(); }; })(); /** * (Internal) Applies css properties to an element, similar to the jQuery * css method. * * While this helper does assist with vendor prefixed property names, it * does not perform any manipulation of values prior to setting styles. */ var css = (function() { var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ], cssProps = {}; function camelCase(string) { return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) { return letter.toUpperCase(); }); } function getVendorProp(name) { var style = document.body.style; if (name in style) return name; var i = cssPrefixes.length, capName = name.charAt(0).toUpperCase() + name.slice(1), vendorName; while (i--) { vendorName = cssPrefixes[i] + capName; if (vendorName in style) return vendorName; } return name; } function getStyleProp(name) { name = camelCase(name); return cssProps[name] || (cssProps[name] = getVendorProp(name)); } function applyCss(element, prop, value) { prop = getStyleProp(prop); element.style[prop] = value; } return function(element, properties) { var args = arguments, prop, value; if (args.length == 2) { for (prop in properties) { value = properties[prop]; if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value); } } else { applyCss(element, args[1], args[2]); } } })(); /** * (Internal) Determines if an element or space separated list of class names contains a class name. */ function hasClass(element, name) { var list = typeof element == 'string' ? element : classList(element); return list.indexOf(' ' + name + ' ') >= 0; } /** * (Internal) Adds a class to an element. */ function addClass(element, name) { var oldList = classList(element), newList = oldList + name; if (hasClass(oldList, name)) return; // Trim the opening space. element.className = newList.substring(1); } /** * (Internal) Removes a class from an element. */ function removeClass(element, name) { var oldList = classList(element), newList; if (!hasClass(element, name)) return; // Replace the class name. newList = oldList.replace(' ' + name + ' ', ' '); // Trim the opening and closing spaces. element.className = newList.substring(1, newList.length - 1); } /** * (Internal) Gets a space separated list of the class names on the element. * The list is wrapped with a single space on each end to facilitate finding * matches within the list. */ function classList(element) { return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' '); } /** * (Internal) Removes an element from the DOM. */ function removeElement(element) { element && element.parentNode && element.parentNode.removeChild(element); } return NProgress; }); 列表 左对齐标题 右对齐标题 居中对齐标题 短文本 中等文本 稍微长一点的文本 稍微长一点的文本 短文本 中等文本 四级标题 五级标题 六级标题 Copyright @2019 all right reserved，powered by Gitbook该文件修订时间： 2019-08-08 13:39:10 "}}